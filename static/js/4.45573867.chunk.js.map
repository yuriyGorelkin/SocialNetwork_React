{"version":3,"sources":["components/Common/FormsControls/FormsControls.module.css","components/Common/FormsControls/FormsControls.jsx","Utilits/Validators/Validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","application/images/profileFoto.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/MyPost.module.css","components/Profile/MyPosts/Post/images/avatar.jpg","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/MyPost.jsx","components/Profile/MyPosts/PostsForm/AddNewPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Textarea","input","meta","touched","error","warning","props","className","styles","unvalid","formControl","Input","max","required","value","undefined","maxLength50","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","type","ProfileInfo","profile","descriptionInfo","src","photos","large","profilePhoto","img","alt","fullName","Preloader","MyPost","style","item","avatar","ava","message","likesCount","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","placeholder","validate","reduxForm","form","MyPosts","postsElements","posts","map","post","key","id","reverse","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userID","this","match","params","userId","authorizedUserID","history","getUserProfile","getStatus","React","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/4.45573867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl___tIAM\",\"unvalid\":\"FormsControls_unvalid__2AP-O\",\"error\":\"FormsControls_error__1ffaF\",\"warning\":\"FormsControls_warning__20Lrx\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({input, meta: {touched, error, warning}, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div className={(touched && (error || warning)) ? styles.unvalid : styles.formControl}>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {touched &&\r\n                ((error && <span className={styles.error}>{error}</span>) || (warning && <span  className={styles.warning}>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error, warning}, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div className={(touched && (error || warning)) ? styles.unvalid : styles.formControl}>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {touched &&\r\n                ((error && <span className={styles.error}>{error}</span>) || (warning && <span  className={styles.warning}>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n","\r\nexport const required = value => (value ? undefined : 'Field is Required');\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\nexport const maxLength50 = maxLength(50);\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__23ToU\",\"descriptionInfo\":\"ProfileInfo_descriptionInfo__3epi3\"};","module.exports = __webpack_public_path__ + \"static/media/profileFoto.7ff2cd0b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3POdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__UzBPR\",\"ava\":\"MyPost_ava__3OH6m\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.aaadab5c.jpg\";","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No Status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status} autoFocus={true} type=\"text\"/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport profilePhoto from '../../../application/images/profileFoto.jpg';\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) return <Preloader/>\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionInfo}>\r\n                <img src={profile.photos.large !== null ? profile.photos.large : profilePhoto} className={styles.img} alt=\"here will be profilePhoto\"/>\r\n                <div> {profile.fullName} </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport style from './MyPost.module.css';\r\nimport avatar from './images/avatar.jpg';\r\n\r\nconst MyPost = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src={avatar} className={style.ava} alt=\"here will be avatar\"/>\r\n            {props.message}\r\n            <div className=\"\">\r\n                <span>&#10084; Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyPost;\r\n\r\n\r\n\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLength50, required} from \"../../../../Utilits/Validators/Validators\";\r\nimport {Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} placeholder= 'add your post'\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default AddNewPostForm;\r\n\r\n","import React from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport MyPost from \"./Post/MyPost\";\r\nimport AddNewPostForm from './PostsForm/AddNewPostsForm';\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(post => <MyPost message={post.message} likesCount={post.likesCount}\r\n                                                        key={post.id}/>).reverse();\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <AddNewPostForm onSubmit={addNewPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile = {props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userId;\r\n        if (!userID) {\r\n            userID = this.props.authorizedUserID;\r\n            if (!userID) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userID);\r\n        this.props.getStatus(userID);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.userID\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}