{"version":3,"sources":["api/api.js","redux/auth-reducer.js","serviceWorker.js","components/NavBar/NavBar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/Header/Header.module.css","components/Common/Preloader/Preloader.jsx","redux/profile-reducer.js","components/NavBar/NavBar.module.css","redux/dialogs-reducer.js","Utilits/object-helpers.js","redux/users-reducer.js","components/Header/images/logo.jpg","application/images/preloader.gif"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","userID","post","unfollowUser","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","isAuth","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","a","resultCode","id","loginUser","message","messages","length","stopSubmit","_error","logoutUser","Boolean","window","location","hostname","match","NavBar","className","style","nav","item","to","link","activeClassName","active","Header","props","header","src","logo","alt","onClick","login_link","HeaderContainer","this","React","Component","connect","auth","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sideBar","usersPage","usersReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","UsersContainer","ProfileContainer","Login","News","Music","Settings","App","initializeApp","fallback","Preloader","path","render","component","AppContainer","compose","withRouter","promise","Promise","all","SocialNetworkApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","module","exports","preloaderIMG","posts","likesCount","profile","newPostText","addPostActionCreator","setStatus","getUserProfile","dialogs","name","newText","newMessageText","sendMessageCreator","updateObjectInArray","items","itemId","objPropName","newObjProps","map","users","totalUsersCount","isFetching","followingInProgress","followSuccess","followed","count","filter","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","requestUsers","page","totalCount","follow","unfollow"],"mappings":"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","file":"static/js/main.98356646.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '5987ff9c-f742-46ec-958a-ffaa79f8149f'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    followUser(userID) {\r\n        return instance.post(`follow/${userID}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    unfollowUser(userID) {\r\n        return instance.delete(`follow/${userID}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID) {\r\n        return instance.get(`profile/${userID}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {\r\n            email: email,\r\n            password: password,\r\n            rememberMe: rememberMe\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    userID: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n// actionCreators:\r\nconst setAuthUserData = (userID, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userID, email, login, isAuth}\r\n});\r\n\r\n// thunkCreators:\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n        const response = await authAPI.me();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Something not valid';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Profile is cached for offline use.\" message.\n              console.log('Profile is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport style from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to='/profile'  className={style.link} activeClassName={style.active}> Profile </NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/dialogs' className={style.link} activeClassName={style.active}> Messages </NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/users' className={style.link} activeClassName={style.active}> Users </NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink  to='/news' className={style.link} activeClassName={style.active}> News </NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink  to='/music' className={style.link} activeClassName={style.active}> Music </NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink  to='/settings' className={style.link} activeClassName={style.active}> Settings </NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport style from './Header.module.css';\r\nimport logo from \"./images/logo.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img src={logo} className={style.logo} alt=\"here will be logo\"/>\r\n            <div className={style.login}>\r\n                {props.isAuth  ? <div>{props.login} - <button onClick={props.logoutUser}>Log Out</button> </div> : <NavLink to={'/login'} className={style.login_link}> Login </NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logoutUser} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logoutUser})(HeaderContainer);\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n\r\n// actionCreators:\r\nconst initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n// thunkCreators:\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getAuthUserData());\r\n   Promise.all([promise])\r\n       .then(() => {\r\n           dispatch(initializedSuccess());\r\n       });\r\n}\r\n\r\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sideBar: sidebarReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        form: formReducer,\r\n        app: appReducer\r\n    });\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n\r\nwindow.store = store;","import React, {Suspense} from 'react';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst Login = React.lazy(() => import('./components/Login/Login'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <NavBar/>\n                <div className=\"app-wrapper-content\">\n                    <Suspense fallback={<Preloader/>}>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='/news' component={News}/>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/settings' component={Settings}/>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\n\nconst AppContainer = compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\nconst SocialNetworkApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default SocialNetworkApp;","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SocialNetworkApp from \"./App\";\n\n\nReactDOM.render(<SocialNetworkApp />, document.getElementById('root'));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2b0tB\",\"logo\":\"Header_logo__r1ZfR\",\"login\":\"Header_login__Eh8lm\",\"login_link\":\"Header_login_link__3A80_\"};","import React from 'react';\r\nimport preloaderIMG from \"../../../application/images/preloader.gif\";\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img src={preloaderIMG} alt='here will be preloader gif'/>\r\n    );\r\n}\r\n\r\nexport default Preloader","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 0, message: 'Hey, how are you?', likesCount: '5'},\r\n        {id: 1, message: 'I am fine!', likesCount: '7'}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 2, message: action.newPostText, likesCount: '0'}]\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n//actionCreators:\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText: newPostText});\r\nconst setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile: profile});\r\nconst setStatus = (status) => ({type: SET_STATUS, status: status});\r\n\r\n\r\n// thunkCreators:\r\nexport const getUserProfile = (userID) => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userID);\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userID) => async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userID);\r\n    dispatch(setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__bdmNR\",\"link\":\"NavBar_link__1cn00\",\"active\":\"NavBar_active__3R3VG\"};","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 0, name: 'Yurii'},\r\n        {id: 1, name: 'Aleksandra'},\r\n        {id: 2, name: 'Varvara'},\r\n        {id: 3, name: 'Kirill'},\r\n        {id: 4, name: 'Anya'},\r\n        {id: 5, name: 'Miya'}\r\n    ],\r\n    messages: [\r\n        {id: 0, message: 'Hi'},\r\n        {id: 1, message: 'What is the capital of Great Britain?'},\r\n        {id: 2, message: 'London'},\r\n        {id: 3, message: 'Ok'},\r\n        {id: 4, message: 'Ok'},\r\n        {id: 5, message: 'Yes'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let newText = action.newMessageText\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 7, message: newText}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText: newMessageText});\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../Utilits/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count < 10 ? action.count : 500\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n// actionCreators:\r\nconst followSuccess = (userID) => ({type: FOLLOW, userID: userID});\r\nconst unfollowSuccess = (userID) => ({type: UNFOLLOW, userID: userID});\r\nconst setUsers = (users) => ({type: SET_USERS, users: users});\r\nconst setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage});\r\nconst setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nconst toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching: isFetching});\r\nconst toggleFollowingProgress = (isFetching, userID) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress: isFetching,\r\n    userID: userID\r\n});\r\n\r\n// thunkCreators:\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport const follow = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userID));\r\n        const data = await usersAPI.followUser(userID);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(followSuccess(userID));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userID));\r\n    }\r\n}\r\n\r\nexport const unfollow = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userID));\r\n        const data = await usersAPI.unfollowUser(userID);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userID));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userID));\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.35dc5493.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.befbbfa2.gif\";"],"sourceRoot":""}