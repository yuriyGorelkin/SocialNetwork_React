{"version":3,"sources":["components/Common/FormsControls/FormsControls.module.css","components/Common/FormsControls/FormsControls.jsx","Utilits/Validators/Validators.js","components/Login/Login.jsx"],"names":["module","exports","Textarea","input","meta","touched","error","warning","props","className","styles","unvalid","formControl","Input","max","required","value","undefined","maxLength50","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","name","component","placeholder","type","validate","connect","state","isAuth","auth","loginUser","to","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,QAAU,+BAA+B,MAAQ,6BAA6B,QAAU,iC,oJCE9IC,EAAW,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,MAAsD,IAA/CC,KAAOC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAaC,EAAW,gCAC5E,OACI,6BACI,yBAAKC,UAAYJ,IAAYC,GAASC,GAAYG,IAAOC,QAAUD,IAAOE,aACtE,8CAAcT,EAAWK,KAE7B,6BACKH,IACCC,GAAS,0BAAMG,UAAWC,IAAOJ,OAAQA,IAAmBC,GAAW,0BAAOE,UAAWC,IAAOH,SAAUA,OAO/GM,EAAQ,SAAC,GAAwD,IAAvDV,EAAsD,EAAtDA,MAAsD,IAA/CC,KAAOC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAaC,EAAW,gCACzE,OACI,6BACI,yBAAKC,UAAYJ,IAAYC,GAASC,GAAYG,IAAOC,QAAUD,IAAOE,aACtE,2CAAWT,EAAWK,KAE1B,6BACKH,IACCC,GAAS,0BAAMG,UAAWC,IAAOJ,OAAQA,IAAmBC,GAAW,0BAAOE,UAAWC,IAAOH,SAAUA,Q,iCCzB5H,oEAAO,IAEWO,EAFLC,EAAW,SAAAC,GAAK,OAAKA,OAAQC,EAAY,qBAKzCC,GAHKJ,EAGmB,GAHZ,SAAAE,GAAK,OAC1BA,GAASA,EAAMG,OAASL,EAAxB,kBAAyCA,EAAzC,4BAAoEG,K,iCCJxE,wGA8BMG,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EArBL,SAACb,GACf,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWb,IAAOc,YAAY,QAAQC,KAAK,OAAOC,SAAUd,OAEpF,6BACI,kBAAC,IAAD,CAAOU,KAAK,WAAWC,UAAWb,IAAOc,YAAY,WAAWC,KAAK,WAAWC,SAAUd,OAG1FP,EAAMF,MAAQ,yBAAKG,UAAWC,IAAOJ,OAAQE,EAAMF,OAAe,GAEtE,6BACI,kBAAC,IAAD,CAAOmB,KAAK,aAAaC,UAAWb,IAAOe,KAAK,aADpD,gBAGA,4BAAQA,KAAK,UAAb,aA8BGE,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAIiB,CAACE,eAA1BJ,EArBD,SAACtB,GAMX,OAAIA,EAAMwB,OAAe,kBAAC,IAAD,CAAUG,GAAI,aAGnC,oCACI,qCACA,kBAACf,EAAD,CAAgBG,SATP,SAACa,GACd5B,EAAM0B,UAAUE,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.08e53246.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl___tIAM\",\"unvalid\":\"FormsControls_unvalid__2AP-O\",\"error\":\"FormsControls_error__1ffaF\",\"warning\":\"FormsControls_warning__20Lrx\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({input, meta: {touched, error, warning}, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div className={(touched && (error || warning)) ? styles.unvalid : styles.formControl}>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {touched &&\r\n                ((error && <span className={styles.error}>{error}</span>) || (warning && <span  className={styles.warning}>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error, warning}, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div className={(touched && (error || warning)) ? styles.unvalid : styles.formControl}>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {touched &&\r\n                ((error && <span className={styles.error}>{error}</span>) || (warning && <span  className={styles.warning}>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n","\r\nexport const required = value => (value ? undefined : 'Field is Required');\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\nexport const maxLength50 = maxLength(50);\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utilits/Validators/Validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../Common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='email' component={Input} placeholder='email' type='text' validate={required}/>\r\n            </div>\r\n            <div>\r\n                <Field name='password' component={Input} placeholder='password' type='password' validate={required}/>\r\n            </div>\r\n            {\r\n                props.error ? <div className={styles.error}>{props.error}</div> : ''\r\n            }\r\n            <div>\r\n                <Field name='rememberMe' component={Input} type='checkbox'/> Remember me\r\n            </div>\r\n            <button type='submit'>Login</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.loginUser(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>\r\n\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {loginUser})(Login);"],"sourceRoot":""}